/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PoolAnalyticsMetrics = {
  volume24hUsd?: number | undefined;
  volume7dUsd?: number | undefined;
  fees24hUsd?: number | undefined;
  tvlUsd?: number | undefined;
  liquidityUsd?: number | undefined;
  apr?: number | null | undefined;
  apy?: number | null | undefined;
};

/** @internal */
export const PoolAnalyticsMetrics$inboundSchema: z.ZodType<
  PoolAnalyticsMetrics,
  z.ZodTypeDef,
  unknown
> = z.object({
  volume24hUsd: z.number().optional(),
  volume7dUsd: z.number().optional(),
  fees24hUsd: z.number().optional(),
  tvlUsd: z.number().optional(),
  liquidityUsd: z.number().optional(),
  apr: z.nullable(z.number()).optional(),
  apy: z.nullable(z.number()).optional(),
});

/** @internal */
export type PoolAnalyticsMetrics$Outbound = {
  volume24hUsd?: number | undefined;
  volume7dUsd?: number | undefined;
  fees24hUsd?: number | undefined;
  tvlUsd?: number | undefined;
  liquidityUsd?: number | undefined;
  apr?: number | null | undefined;
  apy?: number | null | undefined;
};

/** @internal */
export const PoolAnalyticsMetrics$outboundSchema: z.ZodType<
  PoolAnalyticsMetrics$Outbound,
  z.ZodTypeDef,
  PoolAnalyticsMetrics
> = z.object({
  volume24hUsd: z.number().optional(),
  volume7dUsd: z.number().optional(),
  fees24hUsd: z.number().optional(),
  tvlUsd: z.number().optional(),
  liquidityUsd: z.number().optional(),
  apr: z.nullable(z.number()).optional(),
  apy: z.nullable(z.number()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PoolAnalyticsMetrics$ {
  /** @deprecated use `PoolAnalyticsMetrics$inboundSchema` instead. */
  export const inboundSchema = PoolAnalyticsMetrics$inboundSchema;
  /** @deprecated use `PoolAnalyticsMetrics$outboundSchema` instead. */
  export const outboundSchema = PoolAnalyticsMetrics$outboundSchema;
  /** @deprecated use `PoolAnalyticsMetrics$Outbound` instead. */
  export type Outbound = PoolAnalyticsMetrics$Outbound;
}

export function poolAnalyticsMetricsToJSON(
  poolAnalyticsMetrics: PoolAnalyticsMetrics,
): string {
  return JSON.stringify(
    PoolAnalyticsMetrics$outboundSchema.parse(poolAnalyticsMetrics),
  );
}

export function poolAnalyticsMetricsFromJSON(
  jsonString: string,
): SafeParseResult<PoolAnalyticsMetrics, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PoolAnalyticsMetrics$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PoolAnalyticsMetrics' from JSON`,
  );
}
