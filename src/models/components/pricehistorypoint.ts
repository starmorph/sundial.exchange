/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type PriceHistoryPoint = {
  timestamp: number;
  price: number;
};

/** @internal */
export const PriceHistoryPoint$inboundSchema: z.ZodType<
  PriceHistoryPoint,
  z.ZodTypeDef,
  unknown
> = z.object({
  timestamp: z.number(),
  price: z.number(),
});

/** @internal */
export type PriceHistoryPoint$Outbound = {
  timestamp: number;
  price: number;
};

/** @internal */
export const PriceHistoryPoint$outboundSchema: z.ZodType<
  PriceHistoryPoint$Outbound,
  z.ZodTypeDef,
  PriceHistoryPoint
> = z.object({
  timestamp: z.number(),
  price: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PriceHistoryPoint$ {
  /** @deprecated use `PriceHistoryPoint$inboundSchema` instead. */
  export const inboundSchema = PriceHistoryPoint$inboundSchema;
  /** @deprecated use `PriceHistoryPoint$outboundSchema` instead. */
  export const outboundSchema = PriceHistoryPoint$outboundSchema;
  /** @deprecated use `PriceHistoryPoint$Outbound` instead. */
  export type Outbound = PriceHistoryPoint$Outbound;
}

export function priceHistoryPointToJSON(
  priceHistoryPoint: PriceHistoryPoint,
): string {
  return JSON.stringify(
    PriceHistoryPoint$outboundSchema.parse(priceHistoryPoint),
  );
}

export function priceHistoryPointFromJSON(
  jsonString: string,
): SafeParseResult<PriceHistoryPoint, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PriceHistoryPoint$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PriceHistoryPoint' from JSON`,
  );
}
