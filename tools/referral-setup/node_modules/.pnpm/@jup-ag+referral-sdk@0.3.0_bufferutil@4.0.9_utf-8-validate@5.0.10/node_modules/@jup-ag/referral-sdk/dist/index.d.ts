import * as _coral_xyz_anchor from '@coral-xyz/anchor';
import { IdlAccounts } from '@coral-xyz/anchor';
import { RawAccount } from '@solana/spl-token';
import { PublicKey, Connection, GetProgramAccountsFilter, Transaction, VersionedTransaction } from '@solana/web3.js';

type Referral = {
    version: "0.1.0";
    name: "referral";
    instructions: [
        {
            name: "initializeProject";
            accounts: [
                {
                    name: "payer";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "base";
                    isMut: false;
                    isSigner: true;
                },
                {
                    name: "admin";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "project";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "InitializeProjectParams";
                    };
                }
            ];
        },
        {
            name: "initializeReferralAccount";
            accounts: [
                {
                    name: "payer";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "partner";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "InitializeReferralAccountParams";
                    };
                }
            ];
        },
        {
            name: "initializeReferralAccountWithName";
            accounts: [
                {
                    name: "payer";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "partner";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "InitializeReferralAccountWithNameParams";
                    };
                }
            ];
        },
        {
            name: "updateProject";
            accounts: [
                {
                    name: "admin";
                    isMut: false;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: true;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "UpdateProjectParams";
                    };
                }
            ];
        },
        {
            name: "transferProject";
            accounts: [
                {
                    name: "admin";
                    isMut: false;
                    isSigner: true;
                },
                {
                    name: "newAdmin";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "project";
                    isMut: true;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "TransferProjectParams";
                    };
                }
            ];
        },
        {
            name: "updateReferralAccount";
            accounts: [
                {
                    name: "admin";
                    isMut: false;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: true;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "UpdateReferralAccountParams";
                    };
                }
            ];
        },
        {
            name: "transferReferralAccount";
            accounts: [
                {
                    name: "partner";
                    isMut: false;
                    isSigner: true;
                },
                {
                    name: "newPartner";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: true;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "TransferReferralAccountParams";
                    };
                }
            ];
        },
        {
            name: "initializeReferralTokenAccount";
            accounts: [
                {
                    name: "payer";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "mint";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "tokenProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [];
        },
        {
            name: "claim";
            accounts: [
                {
                    name: "payer";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "admin";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "projectAdminTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "partner";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "partnerTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "mint";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "associatedTokenProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "tokenProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [];
        },
        {
            name: "createAdminTokenAccount";
            accounts: [
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "projectAuthority";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "admin";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "projectAdminTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "mint";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "tokenProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "associatedTokenProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [];
        },
        {
            name: "withdrawFromProject";
            accounts: [
                {
                    name: "admin";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "projectAuthority";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [
                {
                    name: "params";
                    type: {
                        defined: "WithdrawFromProjectParams";
                    };
                }
            ];
        },
        {
            name: "claimV2";
            accounts: [
                {
                    name: "payer";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "admin";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "projectAdminTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "partner";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "partnerTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "mint";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "systemProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "tokenProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "associatedTokenProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [];
        },
        {
            name: "closeReferralTokenAccountV2";
            accounts: [
                {
                    name: "admin";
                    isMut: true;
                    isSigner: true;
                },
                {
                    name: "project";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralAccount";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "referralTokenAccount";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "partner";
                    isMut: true;
                    isSigner: false;
                },
                {
                    name: "mint";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "tokenProgram";
                    isMut: false;
                    isSigner: false;
                },
                {
                    name: "associatedTokenProgram";
                    isMut: false;
                    isSigner: false;
                }
            ];
            args: [];
        }
    ];
    accounts: [
        {
            name: "project";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "base";
                        type: "publicKey";
                    },
                    {
                        name: "admin";
                        type: "publicKey";
                    },
                    {
                        name: "name";
                        type: "string";
                    },
                    {
                        name: "defaultShareBps";
                        type: "u16";
                    }
                ];
            };
        },
        {
            name: "referralAccount";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "partner";
                        type: "publicKey";
                    },
                    {
                        name: "project";
                        type: "publicKey";
                    },
                    {
                        name: "shareBps";
                        type: "u16";
                    },
                    {
                        name: "name";
                        type: {
                            option: "string";
                        };
                    }
                ];
            };
        }
    ];
    types: [
        {
            name: "InitializeProjectParams";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "name";
                        type: "string";
                    },
                    {
                        name: "defaultShareBps";
                        type: "u16";
                    }
                ];
            };
        },
        {
            name: "InitializeReferralAccountWithNameParams";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "name";
                        type: "string";
                    }
                ];
            };
        },
        {
            name: "InitializeReferralAccountParams";
            type: {
                kind: "struct";
                fields: [];
            };
        },
        {
            name: "TransferProjectParams";
            type: {
                kind: "struct";
                fields: [];
            };
        },
        {
            name: "TransferReferralAccountParams";
            type: {
                kind: "struct";
                fields: [];
            };
        },
        {
            name: "UpdateProjectParams";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "name";
                        type: {
                            option: "string";
                        };
                    },
                    {
                        name: "defaultShareBps";
                        type: {
                            option: "u16";
                        };
                    }
                ];
            };
        },
        {
            name: "UpdateReferralAccountParams";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "shareBps";
                        type: "u16";
                    }
                ];
            };
        },
        {
            name: "WithdrawFromProjectParams";
            type: {
                kind: "struct";
                fields: [
                    {
                        name: "amount";
                        type: "u64";
                    }
                ];
            };
        }
    ];
    events: [
        {
            name: "InitializeProjectEvent";
            fields: [
                {
                    name: "project";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "admin";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "name";
                    type: "string";
                    index: false;
                },
                {
                    name: "defaultShareBps";
                    type: "u16";
                    index: false;
                }
            ];
        },
        {
            name: "UpdateProjectEvent";
            fields: [
                {
                    name: "project";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "name";
                    type: "string";
                    index: false;
                },
                {
                    name: "defaultShareBps";
                    type: "u16";
                    index: false;
                }
            ];
        },
        {
            name: "InitializeReferralAccountEvent";
            fields: [
                {
                    name: "project";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "partner";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "referralAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "shareBps";
                    type: "u16";
                    index: false;
                },
                {
                    name: "name";
                    type: {
                        option: "string";
                    };
                    index: false;
                }
            ];
        },
        {
            name: "UpdateReferralAccountEvent";
            fields: [
                {
                    name: "referralAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "shareBps";
                    type: "u16";
                    index: false;
                }
            ];
        },
        {
            name: "InitializeReferralTokenAccountEvent";
            fields: [
                {
                    name: "project";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "referralAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "referralTokenAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "mint";
                    type: "publicKey";
                    index: false;
                }
            ];
        },
        {
            name: "ClaimEvent";
            fields: [
                {
                    name: "project";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "projectAdminTokenAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "referralAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "referralTokenAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "partnerTokenAccount";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "mint";
                    type: "publicKey";
                    index: false;
                },
                {
                    name: "referralAmount";
                    type: "u64";
                    index: false;
                },
                {
                    name: "projectAmount";
                    type: "u64";
                    index: false;
                }
            ];
        }
    ];
    errors: [
        {
            code: 6000;
            name: "InvalidCalculation";
        },
        {
            code: 6001;
            name: "InvalidSharePercentage";
        },
        {
            code: 6002;
            name: "NameTooLong";
        }
    ];
};
declare const IDL: Referral;

interface InitializeProjectVariable {
    adminPubKey: PublicKey;
    basePubKey: PublicKey;
    name: string;
    defaultShareBps: number;
}
interface TransferProjectVariable {
    newAdminPubKey: PublicKey;
    projectPubKey: PublicKey;
}
interface InitializeReferralAccountVariable {
    projectPubKey: PublicKey;
    partnerPubKey: PublicKey;
    payerPubKey: PublicKey;
    referralAccountPubKey: PublicKey;
}
interface InitializeReferralAccountWithNameVariable {
    projectPubKey: PublicKey;
    partnerPubKey: PublicKey;
    payerPubKey: PublicKey;
    name: string;
}
interface TransferReferralAccountVariable {
    newPartnerPubKey: PublicKey;
    referralAccountPubKey: PublicKey;
}
interface GetReferralAccountPubkeyVariable {
    projectPubKey: PublicKey;
    name: string;
}
interface GetReferralTokenAccountPubkeyVariable {
    referralAccountPubKey: PublicKey;
    mint: PublicKey;
}
interface InitializeReferralTokenAccountVariable {
    payerPubKey: PublicKey;
    referralAccountPubKey: PublicKey;
    mint: PublicKey;
}
interface ClaimVariable {
    payerPubKey: PublicKey;
    referralAccountPubKey: PublicKey;
    mint: PublicKey;
}
interface ClaimAllVariable {
    payerPubKey: PublicKey;
    referralAccountPubKey: PublicKey;
    strategy?: GetReferralTokenAccountsStrategy;
}
interface ClaimPartiallyVariable extends ClaimAllVariable {
    withdrawalableTokenAddress: PublicKey[];
}
interface RawAccountWithPubkey {
    pubkey: PublicKey;
    account: RawAccount;
}
declare const useReferral: (connection: Connection) => ReferralProvider;
type GetReferralTokenAccountsStrategy = {
    type: "top-tokens";
    topN: number;
} | {
    type: "token-list";
};
declare class ReferralProvider {
    private program;
    private connection;
    constructor(connection: Connection);
    getProjects(filters?: GetProgramAccountsFilter[]): Promise<_coral_xyz_anchor.ProgramAccount<{
        base: PublicKey;
        admin: PublicKey;
        name: string;
        defaultShareBps: number;
    }>[]>;
    getProject(pubkey: PublicKey): Promise<{
        base: PublicKey;
        admin: PublicKey;
        name: string;
        defaultShareBps: number;
    }>;
    getReferralAccount(pubkey: PublicKey): Promise<{
        partner: PublicKey;
        project: PublicKey;
        shareBps: number;
        name: string;
    }>;
    getReferralAccounts(filters?: GetProgramAccountsFilter[]): Promise<_coral_xyz_anchor.ProgramAccount<{
        partner: PublicKey;
        project: PublicKey;
        shareBps: number;
        name: string;
    }>[]>;
    getProjectAuthorityPubKey(project: IdlAccounts<Referral>["project"]): PublicKey;
    getReferralAccountWithNamePubKey({ projectPubKey, name, }: GetReferralAccountPubkeyVariable): PublicKey;
    getReferralTokenAccountPubKey({ referralAccountPubKey, mint, }: GetReferralTokenAccountPubkeyVariable): PublicKey;
    getReferralTokenAccountPubKeyV2({ referralAccountPubKey, tokenProgramId, mint, }: GetReferralTokenAccountPubkeyVariable & {
        tokenProgramId: PublicKey;
    }): PublicKey;
    getReferralTokenAccounts(referralAccountAddress: string): Promise<{
        tokenAccounts: RawAccountWithPubkey[];
        token2022Accounts: RawAccountWithPubkey[];
    }>;
    getReferralTokenAccountsV2(referralAccountAddress: string): Promise<{
        tokenAccounts: RawAccountWithPubkey[];
        token2022Accounts: RawAccountWithPubkey[];
    }>;
    getReferralTokenAccountsWithStrategy(referralAccountAddress: string, strategy?: GetReferralTokenAccountsStrategy): Promise<{
        tokenAccounts: RawAccountWithPubkey[];
        token2022Accounts: RawAccountWithPubkey[];
    }>;
    getReferralTokenAccountsWithStrategyV2(referralAccountAddress: string, strategy?: GetReferralTokenAccountsStrategy): Promise<{
        tokenAccounts: RawAccountWithPubkey[];
        token2022Accounts: RawAccountWithPubkey[];
    }>;
    initializeProject({ basePubKey, adminPubKey, name, defaultShareBps, }: InitializeProjectVariable): Promise<Transaction>;
    transferProject({ newAdminPubKey, projectPubKey, }: TransferProjectVariable): Promise<Transaction>;
    initializeReferralAccount({ projectPubKey, partnerPubKey, payerPubKey, referralAccountPubKey, }: InitializeReferralAccountVariable): Promise<Transaction>;
    initializeReferralAccountWithName({ projectPubKey, partnerPubKey, payerPubKey, name, }: InitializeReferralAccountWithNameVariable): Promise<{
        tx: Transaction;
        referralAccountPubKey: PublicKey;
    }>;
    transferReferralAccount({ newPartnerPubKey, referralAccountPubKey, }: TransferReferralAccountVariable): Promise<Transaction>;
    initializeReferralTokenAccount({ payerPubKey, referralAccountPubKey, mint, }: InitializeReferralTokenAccountVariable): Promise<{
        tx: Transaction;
        referralTokenAccountPubKey: PublicKey;
    }>;
    initializeReferralTokenAccountV2({ payerPubKey, referralAccountPubKey, mint, }: InitializeReferralTokenAccountVariable): Promise<{
        tx: Transaction;
        tokenAccount: PublicKey;
    }>;
    claim({ payerPubKey, referralAccountPubKey, mint, }: ClaimVariable): Promise<VersionedTransaction>;
    claimV2({ payerPubKey, referralAccountPubKey, mint, }: ClaimVariable): Promise<VersionedTransaction>;
    claimAll({ payerPubKey, referralAccountPubKey, strategy, }: ClaimAllVariable): Promise<VersionedTransaction[]>;
    claimAllV2({ payerPubKey, referralAccountPubKey, }: ClaimAllVariable): Promise<VersionedTransaction[]>;
    claimPartially({ payerPubKey, referralAccountPubKey, withdrawalableTokenAddress, }: ClaimPartiallyVariable): Promise<VersionedTransaction[]>;
}

declare const projectAdminFilter: (publicKey: PublicKey) => {
    memcmp: {
        offset: number;
        bytes: string;
    };
};
declare const referralAccountPartnerFilter: (publicKey: PublicKey) => GetProgramAccountsFilter;
declare const referralAccountProjectFilter: (publicKey: PublicKey) => GetProgramAccountsFilter;

declare const PROGRAM_ID: PublicKey;
declare const RPC_URL: string;

type ReferralAccount = IdlAccounts<Referral>["referralAccount"];
type Project = IdlAccounts<Referral>["project"];

export { ClaimAllVariable, ClaimPartiallyVariable, ClaimVariable, GetReferralAccountPubkeyVariable, GetReferralTokenAccountPubkeyVariable, GetReferralTokenAccountsStrategy, IDL, InitializeProjectVariable, InitializeReferralAccountVariable, InitializeReferralAccountWithNameVariable, InitializeReferralTokenAccountVariable, PROGRAM_ID, Project, RPC_URL, RawAccountWithPubkey, Referral, ReferralAccount, ReferralProvider, TransferProjectVariable, TransferReferralAccountVariable, projectAdminFilter, referralAccountPartnerFilter, referralAccountProjectFilter, useReferral };
